#!/usr/bin/env sh
# embed_logo.sh — generate logo_embedded.inc from frames/*.txt or logo.txt
set -euo pipefail

out="logo_embedded.inc"
tmp="${out}.tmp"

frames_list=""
if [ -d "frames" ]; then
  frames_list=$(LC_ALL=C ls -1 frames/logo*.txt 2>/dev/null || true)
fi
if [ -z "$frames_list" ] && [ -f "logo.txt" ]; then
  frames_list="logo.txt"
fi
if [ -z "$frames_list" ]; then
  echo "No frames found (frames/logo*.txt) and no logo.txt. Generating minimal fallback." >&2
  frames_list="/dev/null"
fi

has_xxd=0
if command -v xxd >/dev/null 2>&1; then
  has_xxd=1
fi

has_hexdump=0
if command -v hexdump >/dev/null 2>&1; then
  has_hexdump=1
fi

has_od=0
if command -v od >/dev/null 2>&1; then
  has_od=1
fi

count=0
{
cat <<'HDR'
/* Auto-generated by embed_logo.sh — DO NOT EDIT BY HAND.
   This file embeds ASCII frames as byte arrays.
*/
#include <stddef.h>

typedef struct { const unsigned char *data; unsigned int len; } LogoFrame;
extern const LogoFrame EMBED_FRAMES[];
extern const unsigned int EMBED_FRAME_COUNT;

HDR

i=0
for f in $frames_list; do
  if [ "$f" = "/dev/null" ]; then
    echo "static const unsigned char frame_${i}[] = { 'm','i','n','i','f','e','t','c','h',0x0A };"
    echo "static const unsigned int frame_${i}_len = sizeof(frame_${i});"
  else
    echo "static const unsigned char frame_${i}[] = {"
    if [ $has_xxd -eq 1 ]; then
      xxd -i "$f" | awk '
        NR==1 { next }
        /};/ { next }
        /_len/ { next }
        { printf("    %s\n", $0) }
      '
    elif [ $has_hexdump -eq 1 ]; then
      hexdump -v -e '16/1 "    0x%02X," "\n"' "$f"
    elif [ $has_od -eq 1 ]; then
      od -An -v -t x1 "$f" | awk '
        BEGIN { count = 0; }
        {
          for (i = 1; i <= NF; ++i) {
            printf("    0x%s,", toupper($i));
            count++;
            if (count % 12 == 0) printf("\n");
            else printf(" ");
          }
        }
        END {
          if (count % 12 != 0) printf("\n");
        }
      '
    else
      printf '    0x6D, 0x69, 0x6E, 0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x0A\n'
    fi
    echo "};"
    echo "static const unsigned int frame_${i}_len = sizeof(frame_${i});"
  fi
  echo
  i=$((i+1))
done

count=$i
echo "const LogoFrame EMBED_FRAMES[] = {"
j=0
while [ $j -lt $count ]; do
  echo "    { frame_${j}, frame_${j}_len },"
  j=$((j+1))
done
echo "};"
echo "const unsigned int EMBED_FRAME_COUNT = ${count};"

} > "$tmp"

mv "$tmp" "$out"
echo "Wrote $out ($count frame(s))."

